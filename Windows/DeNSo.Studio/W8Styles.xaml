<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="{x:Type Button}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style.BasedOn>
      <Style TargetType="{x:Type ButtonBase}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="FrameworkElement.FocusVisualStyle">
          <Setter.Value>
            <Style TargetType="{x:Type IFrameworkInputElement}">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>
              #FFDDDDDD</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>
              #FF707070</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
          <Setter.Value>
            <Thickness>
              1,1,1,1</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
          <Setter.Value>
            <x:Static Member="HorizontalAlignment.Center" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
          <Setter.Value>
            <x:Static Member="VerticalAlignment.Center" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
          <Setter.Value>
            <Thickness>
              1,1,1,1</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFBEE6FD</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FF3C7FB1</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>
                      True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFC4E5F6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FF2C628B</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>
                      True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFF4F4F4</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFADB2B5</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FF838383</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>
                      False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Style.BasedOn>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
  </Style>
  <Style TargetType="{x:Type ScrollBar}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation">
        <Setter Property="FrameworkElement.Width">
          <Setter.Value>
            <s:Double>
              NaN</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinWidth">
          <Setter.Value>
            <s:Double>
              0</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Height">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemParameters.HorizontalScrollBarHeightKey}" />
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinHeight">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemParameters.HorizontalScrollBarHeightKey}" />
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
          <Setter.Value>
            <Thickness>
              0,1,0,1</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="1E-05*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Grid.Column="1" />
                <RepeatButton Command="ScrollBar.LineLeftCommand" Name="PART_LineLeftButton" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <RepeatButton.Style>
                    <Style TargetType="{x:Type RepeatButton}">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.FocusVisualStyle">
                        <Setter.Value>
                          <Style TargetType="{x:Type IFrameworkInputElement}">
                            <Style.Resources>
                              <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate>
                                  <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>
                            1,1,1,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.HorizontalContentAlignment">
                        <Setter.Value>
                          <x:Static Member="HorizontalAlignment.Center" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.VerticalContentAlignment">
                        <Setter.Value>
                          <x:Static Member="VerticalAlignment.Center" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>
                            1,1,1,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border BorderThickness="1,1,1,1" BorderBrush="#FFF0F0F0" Background="#FFF0F0F0" Name="border" SnapsToDevicePixels="True">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFDADADA</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFDADADA</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FF606060</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FF606060</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="UIElement.Opacity" TargetName="contentPresenter">
                                  <Setter.Value>
                                    <s:Double>
                                      0.56</s:Double>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFF0F0F0</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFF0F0F0</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    False</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                  <Path Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Stretch="Uniform" Fill="#FF606060" Name="ArrowLeft" Margin="3,3,3,3" />
                </RepeatButton>
                <Track Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                      <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                          <Style.Resources>
                            <ResourceDictionary />
                          </Style.Resources>
                          <Setter Property="FrameworkElement.OverridesDefaultStyle">
                            <Setter.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background">
                            <Setter.Value>
                              <SolidColorBrush>
                                #00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="UIElement.Focusable">
                            <Setter.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="KeyboardNavigation.IsTabStop">
                            <Setter.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </RepeatButton.Style>
                    </RepeatButton>
                  </Track.DecreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb>
                      <Thumb.Style>
                        <Style TargetType="{x:Type Thumb}">
                          <Style.Resources>
                            <ResourceDictionary />
                          </Style.Resources>
                          <Setter Property="FrameworkElement.OverridesDefaultStyle">
                            <Setter.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="KeyboardNavigation.IsTabStop">
                            <Setter.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type Thumb}">
                                <Rectangle Fill="#FFCDCDCD" Name="rectangle" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" />
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver">
                                    <Setter Property="Shape.Fill" TargetName="rectangle">
                                      <Setter.Value>
                                        <SolidColorBrush>
                                          #FFA6A6A6</SolidColorBrush>
                                      </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                      <s:Boolean>
                                        True</s:Boolean>
                                    </Trigger.Value>
                                  </Trigger>
                                  <Trigger Property="Thumb.IsDragging">
                                    <Setter Property="Shape.Fill" TargetName="rectangle">
                                      <Setter.Value>
                                        <SolidColorBrush>
                                          #FF606060</SolidColorBrush>
                                      </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                      <s:Boolean>
                                        True</s:Boolean>
                                    </Trigger.Value>
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </Thumb.Style>
                    </Thumb>
                  </Track.Thumb>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand">
                      <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                          <Style.Resources>
                            <ResourceDictionary />
                          </Style.Resources>
                          <Setter Property="FrameworkElement.OverridesDefaultStyle">
                            <Setter.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Panel.Background">
                            <Setter.Value>
                              <SolidColorBrush>
                                #00FFFFFF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="UIElement.Focusable">
                            <Setter.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="KeyboardNavigation.IsTabStop">
                            <Setter.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </RepeatButton.Style>
                    </RepeatButton>
                  </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Command="ScrollBar.LineRightCommand" Name="PART_LineRightButton" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Column="2">
                  <RepeatButton.Style>
                    <Style TargetType="{x:Type RepeatButton}">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.FocusVisualStyle">
                        <Setter.Value>
                          <Style TargetType="{x:Type IFrameworkInputElement}">
                            <Style.Resources>
                              <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate>
                                  <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>
                            1,1,1,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.HorizontalContentAlignment">
                        <Setter.Value>
                          <x:Static Member="HorizontalAlignment.Center" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.VerticalContentAlignment">
                        <Setter.Value>
                          <x:Static Member="VerticalAlignment.Center" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>
                            1,1,1,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border BorderThickness="1,1,1,1" BorderBrush="#FFF0F0F0" Background="#FFF0F0F0" Name="border" SnapsToDevicePixels="True">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFDADADA</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFDADADA</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FF606060</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FF606060</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="UIElement.Opacity" TargetName="contentPresenter">
                                  <Setter.Value>
                                    <s:Double>
                                      0.56</s:Double>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFF0F0F0</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="border">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFF0F0F0</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    False</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                  <Path Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Stretch="Uniform" Fill="#FF606060" Name="ArrowRight" Margin="3,3,3,3" />
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                    <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Shape.Fill" TargetName="ArrowRight">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                    <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Shape.Fill" TargetName="ArrowLeft">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                    <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Shape.Fill" TargetName="ArrowRight">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FF000000</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                    <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Shape.Fill" TargetName="ArrowLeft">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FF000000</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Shape.Fill" TargetName="ArrowLeft">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFBFBFBF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="ArrowRight">
                    <Setter.Value>
                      <SolidColorBrush>
                        #FFBFBFBF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>
                      False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <x:Static Member="Orientation.Horizontal" />
        </Trigger.Value>
      </Trigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Stylus.IsPressAndHoldEnabled">
      <Setter.Value>
        <s:Boolean>
          False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>
          False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>
          #FFF0F0F0</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>
          #FFF0F0F0</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>
          1,0,1,0</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Width">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemParameters.VerticalScrollBarWidthKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.MinWidth">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemParameters.VerticalScrollBarWidthKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="1E-05*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Grid.Row="1" />
            <RepeatButton Command="ScrollBar.LineUpCommand" Name="PART_LineUpButton" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
              <RepeatButton.Style>
                <Style TargetType="{x:Type RepeatButton}">
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                      <Style TargetType="{x:Type IFrameworkInputElement}">
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate>
                              <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>
                        1,1,1,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.HorizontalContentAlignment">
                    <Setter.Value>
                      <x:Static Member="HorizontalAlignment.Center" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.VerticalContentAlignment">
                    <Setter.Value>
                      <x:Static Member="VerticalAlignment.Center" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>
                        1,1,1,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderThickness="1,1,1,1" BorderBrush="#FFF0F0F0" Background="#FFF0F0F0" Name="border" SnapsToDevicePixels="True">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFDADADA</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFDADADA</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FF606060</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FF606060</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity" TargetName="contentPresenter">
                              <Setter.Value>
                                <s:Double>
                                  0.56</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFF0F0F0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFF0F0F0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </RepeatButton.Style>
              <Path Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Stretch="Uniform" Fill="#FF606060" Name="ArrowTop" Margin="3,4,3,3" />
            </RepeatButton>
            <Track IsDirectionReversed="True" Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageUpCommand">
                  <RepeatButton.Style>
                    <Style TargetType="{x:Type RepeatButton}">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.OverridesDefaultStyle">
                        <Setter.Value>
                          <s:Boolean>
                            True</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>
                            #00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>
                            False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="KeyboardNavigation.IsTabStop">
                        <Setter.Value>
                          <s:Boolean>
                            False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                </RepeatButton>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb>
                  <Thumb.Style>
                    <Style TargetType="{x:Type Thumb}">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.OverridesDefaultStyle">
                        <Setter.Value>
                          <s:Boolean>
                            True</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="KeyboardNavigation.IsTabStop">
                        <Setter.Value>
                          <s:Boolean>
                            False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle Fill="#FFCDCDCD" Name="rectangle" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="True" />
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="Shape.Fill" TargetName="rectangle">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FFA6A6A6</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="Thumb.IsDragging">
                                <Setter Property="Shape.Fill" TargetName="rectangle">
                                  <Setter.Value>
                                    <SolidColorBrush>
                                      #FF606060</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>
                                    True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Thumb.Style>
                </Thumb>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageDownCommand">
                  <RepeatButton.Style>
                    <Style TargetType="{x:Type RepeatButton}">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.OverridesDefaultStyle">
                        <Setter.Value>
                          <s:Boolean>
                            True</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>
                            #00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>
                            False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="KeyboardNavigation.IsTabStop">
                        <Setter.Value>
                          <s:Boolean>
                            False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                </RepeatButton>
              </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Command="ScrollBar.LineDownCommand" Name="PART_LineDownButton" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2">
              <RepeatButton.Style>
                <Style TargetType="{x:Type RepeatButton}">
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                      <Style TargetType="{x:Type IFrameworkInputElement}">
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate>
                              <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>
                        1,1,1,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.HorizontalContentAlignment">
                    <Setter.Value>
                      <x:Static Member="HorizontalAlignment.Center" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.VerticalContentAlignment">
                    <Setter.Value>
                      <x:Static Member="VerticalAlignment.Center" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>
                        1,1,1,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderThickness="1,1,1,1" BorderBrush="#FFF0F0F0" Background="#FFF0F0F0" Name="border" SnapsToDevicePixels="True">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFDADADA</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFDADADA</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FF606060</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FF606060</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity" TargetName="contentPresenter">
                              <Setter.Value>
                                <s:Double>
                                  0.56</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFF0F0F0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="border">
                              <Setter.Value>
                                <SolidColorBrush>
                                  #FFF0F0F0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>
                                False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </RepeatButton.Style>
              <Path Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Stretch="Uniform" Fill="#FF606060" Name="ArrowBottom" Margin="3,4,3,3" />
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineDownButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Shape.Fill" TargetName="ArrowBottom">
                <Setter.Value>
                  <SolidColorBrush>
                    #FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineUpButton}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Shape.Fill" TargetName="ArrowTop">
                <Setter.Value>
                  <SolidColorBrush>
                    #FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineDownButton}" Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Shape.Fill" TargetName="ArrowBottom">
                <Setter.Value>
                  <SolidColorBrush>
                    #FF000000</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                <Condition Binding="{Binding Path=IsPressed, ElementName=PART_LineUpButton}" Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Shape.Fill" TargetName="ArrowTop">
                <Setter.Value>
                  <SolidColorBrush>
                    #FF000000</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Shape.Fill" TargetName="ArrowTop">
                <Setter.Value>
                  <SolidColorBrush>
                    #FFBFBFBF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="ArrowBottom">
                <Setter.Value>
                  <SolidColorBrush>
                    #FFBFBFBF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>
                  False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>